# -*- coding: utf-8 -*-
"""EmailSpamClassifier.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/114nIQCKxMFNBZhf_3_rTJH6_aCtiszrO
"""

import pandas as pd
import numpy as np
import string
import re

from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.pipeline import make_pipeline
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score

# Download the dataset if needed: https://www.kaggle.com/datasets/uciml/sms-spam-collection-dataset
from google.colab import files
uploaded = files.upload()
import pandas as pd
df = pd.read_csv("spam.csv", encoding='latin-1')[["v1", "v2"]]
df.columns = ["label", "message"]

# Convert labels to binary values
df['label'] = df['label'].map({'ham': 0, 'spam': 1})

# Optional: clean text
def clean_text(text):
    text = text.lower()
    text = re.sub(r'\d+', '', text)  # remove numbers
    text = text.translate(str.maketrans('', '', string.punctuation))  # remove punctuation
    text = text.strip()
    return text

df['cleaned_message'] = df['message'].apply(clean_text)

X = df['cleaned_message']
y = df['label']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create pipeline
model = make_pipeline(
    TfidfVectorizer(stop_words='english'),
    MultinomialNB()
)

model.fit(X_train, y_train)

y_pred = model.predict(X_test)

print("Accuracy:", accuracy_score(y_test, y_pred))
print("Confusion Matrix:\n", confusion_matrix(y_test, y_pred))
print("Classification Report:\n", classification_report(y_test, y_pred))

import joblib
joblib.dump(model, "spam_classifier_model.pkl")

